<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/websocket
       http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <context:component-scan base-package="com.omar.web"></context:component-scan>

    <!--国际化资源  -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/messages</value>
                <value>i18n/content</value>
            </list>
        </property>
    </bean>


    <mvc:annotation-driven enable-matrix-variables="true" conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            <ref bean="marshallingHttpMessageConverter"></ref>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            <bean class="com.omar.spring.http.converter.MapHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <bean id="marshallingHttpMessageConverter"
          class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"
          p:marshaller-ref="xmlMarshaller" p:unmarshaller-ref="xmlMarshaller" />

    <!-- springMVC视图解析器配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/zh_CN/"
          p:suffix=".jsp"></bean>

    <!-- FreeMarker基础设施及视图解析器配置 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"
            p:templateLoaderPath="/WEB-INF/ftl" p:defaultEncoding="UTF-8">
        <property name="freemarkerSettings">
            <props>
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
            p:order="5" p:suffix=".ftl" p:contentType="text/html; charset=utf-8"/>

    <!-- Excel及PDF视图解析器配置 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
          p:order="10"/>
    <!--<bean id="userListExcel" class="com.omar.web.view.UserListExcelView"/>-->
    <!--<bean id="userListPdf" class="com.omar.web.view.UserListPdfView"/>-->


    <!-- XMl及JSON视图解析器配置 -->
    <bean id="userListJson"
          class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
          p:modelKeys="userList"/>

    <bean id="userListXml"
          class="org.springframework.web.servlet.view.xml.MarshallingView"
          p:modelKey="userList" p:marshaller-ref="xmlMarshaller"/>

    <bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller" p:autodetectAnnotations="true">
        <!-- 配置StaxDriver导致输出xml中文乱码-->
        <!--<property name="streamDriver">
            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"></bean>
        </property>-->
    </bean>

    <bean class="com.omar.xstream.util.XStreamAnnotedClassPostProcessor"
          p:basePackage="com.omar.spring.model"
          p:annotationName="com.omar.xstream.util.XStreamAnnoted" p:exclude-ref="excludeMap"></bean>
    <util:map id="excludeMap">
        <entry key="annotation" value="com.omar.xstream.util.ExcludeXStreamAnnoted"></entry>
    </util:map>

    <!-- 配置conversionService -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <ref bean="stringToUserConverter"></ref>
            </list>
        </property>
    </bean>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
          p:ignoreAcceptHeader="true"
          p:favorPathExtension="false"
          p:favorParameter="true"
          p:parameterName="format"
          p:defaultContentType="text/html">
        <property name="mediaTypes">
            <value>
                html=text/html
                xml=application/xml
                json=application/json
            </value>
        </property>
    </bean>

    <!-- 协商多种视图解析器 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
                      p:modelKeys="userList"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView"
                      p:modelKey="userList" p:marshaller-ref="xmlMarshaller"/>
            </list>
        </property>
    </bean>

    <websocket:handlers>
        <websocket:mapping path="/term" handler="sshShellHandler"/>
    </websocket:handlers>

    <mvc:resources mapping="/js/**" location="/WEB-INF/js/"></mvc:resources>
</beans>